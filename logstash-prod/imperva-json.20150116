filter {
  if [type] == "imperva" {
# grok {
#         match => { "message" => "<%{POSINT:syslog_pri}>%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
#      add_field => [ "received_at", "%{@timestamp}" ]
#      add_field => [ "received_from", "%{host}" ]
#      add_tag => [ "imperva-basicgrok" ]
#    }
#    syslog_pri { }
#    date {
#      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
#      add_tag => [ "imperva-date" ]
#    }
#    if !("_grokparsefailure" in [tags]) {
#      mutate {
##        replace => [ "@source_host", "%{syslog_hostname}" ]
#        replace => [ "loghost", "%{syslog_hostname}" ]
#        replace => [ "@message", "%{syslog_message}" ]
#      }
#    }
    json {
         source => "message"
         add_tag => "imperva-json"
    }
    kv {
          source => "message"
          field_split => ";"
          add_tag => [ "imperva-kv"]
   }

    mutate {
         add_field => { "short_message" => "Imperva" }
#         remove_field => [ "$1", "2", "3", "4", "@message", "Message" ]
#         remove_field => [ "SourceModuleName", "SourceModuleType", "SourceName", "SyslogFacility", "SyslogFacilityValue", "SyslogSeverity", "SyslogSeverityValue" ]
#         remove_field => [ "syslog_facility", "syslog_facility_code", "syslog_message", "syslog_pri", "syslog_program", "syslog_severity", "syslog_severity_code", "syslog_timestamp" ]  
    }
  }
}

