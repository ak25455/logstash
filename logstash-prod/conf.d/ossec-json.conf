filter {
  if [type] == "ossec-json" {
    grok {
         match => { "message" => "<%{POSINT:syslog_pri}>%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }

         add_field => [ "received_at", "%{@timestamp}" ]
         add_field => [ "received_from", "%{host}" ]
    }
    syslog_pri { }
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    }
    if !("_grokparsefailure" in [tags]) {
      mutate {
#        replace => [ "@source_host", "%{syslog_hostname}" ]
#        replace => [ "loghost", "%{syslog_hostname}" ]
#        replace => [ "loghost", "%{HostName}" ]
        replace => [ "@message", "%{syslog_message}" ]
      }
    }
    json {
         source => "syslog_message"
        # add_tag => "ossec-json"
     }
     grok {
         match => [ "component", "\(%{DATA:HostName}\) %{IP:SourceIP}-%{GREEDYDATA}" ]
#         add_tag => "OSSEC-Component Split"
     }

     mutate {
        rename => [ "description", "Description" ]
        rename => [ "crit", "Severity" ]
        rename => [ "acct", "UserName" ]
        rename => [ "id", "EventID" ]
        rename => [ "src_ip", "SourceIP" ]

        add_field => { "loghost" =>  "%{HostName}" }
        add_field => { "short_message" => "%{EventID}" }
        add_field => { "full_message" => "%{syslog_message}" }

        convert => [ "EventID", "string" ]

        remove_field => [ "syslog_message", "message", "component" ]
#       remove_field => [ "syslog_hostname", "syslog_message", "syslog_facility", "syslog_facility_code", "syslog_timestamp", "message" , "component", "@message"]
     }
#    if [UserName] =~ /*-*\$\@*/ { drop { } }
  }
}

